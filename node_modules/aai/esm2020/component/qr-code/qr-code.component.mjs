import { Component, Input, ViewChild } from '@angular/core';
import * as QRCode from 'qrious';
import * as i0 from "@angular/core";
export class QrCodeComponent {
    constructor() {
        //
    }
    set content(content) {
        this.createQrcode(content);
    }
    ngOnInit() {
    }
    createQrcode(content) {
        const qr = new QRCode({
            element: this.ele.nativeElement,
            value: `${content}`
        });
        // 二维码的误差校正级别(L, M, Q, H)
        qr.level = 'M';
        qr.size = 70;
    }
}
QrCodeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: QrCodeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
QrCodeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.1", type: QrCodeComponent, selector: "pz-qr-code", inputs: { content: "content" }, viewQueries: [{ propertyName: "ele", first: true, predicate: ["qr"], descendants: true, static: true }], ngImport: i0, template: "<canvas #qr></canvas>\n" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: QrCodeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'pz-qr-code', template: "<canvas #qr></canvas>\n" }]
        }], ctorParameters: function () { return []; }, propDecorators: { content: [{
                type: Input
            }], ele: [{
                type: ViewChild,
                args: ['qr', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXItY29kZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hYWkvc3JjL2NvbXBvbmVudC9xci1jb2RlL3FyLWNvZGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWFpL3NyYy9jb21wb25lbnQvcXItY29kZS9xci1jb2RlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsS0FBSyxFQUFVLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNsRSxPQUFPLEtBQUssTUFBTSxNQUFNLFFBQVEsQ0FBQzs7QUFNakMsTUFBTSxPQUFPLGVBQWU7SUFPeEI7UUFDSSxFQUFFO0lBQ04sQ0FBQztJQVJELElBQWEsT0FBTyxDQUFDLE9BQXdCO1FBQ3pDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQVFNLFFBQVE7SUFDZixDQUFDO0lBRU0sWUFBWSxDQUFDLE9BQU87UUFDdkIsTUFBTSxFQUFFLEdBQUcsSUFBSSxNQUFNLENBQUM7WUFDbEIsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYTtZQUMvQixLQUFLLEVBQUUsR0FBRyxPQUFPLEVBQUU7U0FDdEIsQ0FBQyxDQUFDO1FBQ0gseUJBQXlCO1FBQ3pCLEVBQUUsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ2YsRUFBRSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7SUFDakIsQ0FBQzs7NEdBdEJRLGVBQWU7Z0dBQWYsZUFBZSwyTENQNUIseUJBQ0E7MkZETWEsZUFBZTtrQkFKM0IsU0FBUzsrQkFDSSxZQUFZOzBFQUlULE9BQU87c0JBQW5CLEtBQUs7Z0JBSWtDLEdBQUc7c0JBQTFDLFNBQVM7dUJBQUMsSUFBSSxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3Q2hpbGR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgUVJDb2RlIGZyb20gJ3FyaW91cyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncHotcXItY29kZScsXG4gICAgdGVtcGxhdGVVcmw6ICcuL3FyLWNvZGUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFFyQ29kZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgQElucHV0KCkgc2V0IGNvbnRlbnQoY29udGVudDogc3RyaW5nIHwgbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuY3JlYXRlUXJjb2RlKGNvbnRlbnQpO1xuICAgIH1cblxuICAgIEBWaWV3Q2hpbGQoJ3FyJywge3N0YXRpYzogdHJ1ZX0pIHB1YmxpYyBlbGU7XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8vXG4gICAgfVxuXG4gICAgcHVibGljIG5nT25Jbml0KCkge1xuICAgIH1cblxuICAgIHB1YmxpYyBjcmVhdGVRcmNvZGUoY29udGVudCkge1xuICAgICAgICBjb25zdCBxciA9IG5ldyBRUkNvZGUoe1xuICAgICAgICAgICAgZWxlbWVudDogdGhpcy5lbGUubmF0aXZlRWxlbWVudCxcbiAgICAgICAgICAgIHZhbHVlOiBgJHtjb250ZW50fWBcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIOS6jOe7tOeggeeahOivr+W3ruagoeato+e6p+WIqyhMLCBNLCBRLCBIKVxuICAgICAgICBxci5sZXZlbCA9ICdNJztcbiAgICAgICAgcXIuc2l6ZSA9IDcwO1xuICAgIH1cbn1cbiIsIjxjYW52YXMgI3FyPjwvY2FudmFzPlxuIl19