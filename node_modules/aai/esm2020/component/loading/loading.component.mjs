import { Component, Input } from '@angular/core';
import { NavigationCancel, NavigationEnd, NavigationError, NavigationStart } from '@angular/router';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "../../lib/core/message.service";
export class LoadingComponent {
    constructor(router, msg) {
        this.router = router;
        this.msg = msg;
        this.hide = true;
        this.msg.loadingSubject.subscribe((v) => {
            this.hide = v;
        });
        this.router.events.subscribe((event) => {
            // show loading
            if (event instanceof NavigationStart) {
                this.hide = false;
            }
            if (event instanceof NavigationEnd ||
                event instanceof NavigationCancel ||
                event instanceof NavigationError) {
                setTimeout(() => {
                    this.hide = true;
                }, 100);
            }
        });
    }
}
LoadingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: LoadingComponent, deps: [{ token: i1.Router }, { token: i2.MessageService }], target: i0.ɵɵFactoryTarget.Component });
LoadingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.1", type: LoadingComponent, selector: "pz-loading", inputs: { hide: "hide" }, ngImport: i0, template: `
    <div class="spinner" [hidden]="hide">
      <div></div>
    </div>
  `, isInline: true, styles: ["@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.spinner{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1003;background:rgba(0,0,0,.8);overflow:hidden}.spinner div:first-child{display:block;position:relative;left:50%;top:50%;width:150px;height:150px;margin:-75px 0 0 -75px;border-radius:50%;box-shadow:0 3px 3px #ff386a;transform:translateZ(0);animation:spin 2s linear infinite}.spinner div:first-child:after,.spinner div:first-child:before{content:\"\";position:absolute;border-radius:50%}.spinner div:first-child:before{inset:5px;box-shadow:0 3px 3px #ffe420;animation:spin 3s linear infinite}.spinner div:first-child:after{inset:15px;box-shadow:0 3px 3px #3dafff;animation:spin 1.5s linear infinite}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: LoadingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'pz-loading', template: `
    <div class="spinner" [hidden]="hide">
      <div></div>
    </div>
  `, styles: ["@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.spinner{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1003;background:rgba(0,0,0,.8);overflow:hidden}.spinner div:first-child{display:block;position:relative;left:50%;top:50%;width:150px;height:150px;margin:-75px 0 0 -75px;border-radius:50%;box-shadow:0 3px 3px #ff386a;transform:translateZ(0);animation:spin 2s linear infinite}.spinner div:first-child:after,.spinner div:first-child:before{content:\"\";position:absolute;border-radius:50%}.spinner div:first-child:before{inset:5px;box-shadow:0 3px 3px #ffe420;animation:spin 3s linear infinite}.spinner div:first-child:after{inset:15px;box-shadow:0 3px 3px #3dafff;animation:spin 1.5s linear infinite}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.Router }, { type: i2.MessageService }]; }, propDecorators: { hide: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hYWkvc3JjL2NvbXBvbmVudC9sb2FkaW5nL2xvYWRpbmcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxhQUFhLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBVSxNQUFNLGlCQUFpQixDQUFDOzs7O0FBd0Y1RyxNQUFNLE9BQU8sZ0JBQWdCO0lBRzNCLFlBQTZCLE1BQWMsRUFBVSxHQUFtQjtRQUEzQyxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBZ0I7UUFGeEQsU0FBSSxHQUFHLElBQUksQ0FBQztRQUcxQixJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQy9CLENBQUMsQ0FBVSxFQUFFLEVBQUU7WUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNoQixDQUFDLENBQ0YsQ0FBQztRQUNGLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ3JDLGVBQWU7WUFDZixJQUFJLEtBQUssWUFBWSxlQUFlLEVBQUU7Z0JBQ3BDLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO2FBQ25CO1lBQ0QsSUFBSSxLQUFLLFlBQVksYUFBYTtnQkFDaEMsS0FBSyxZQUFZLGdCQUFnQjtnQkFDakMsS0FBSyxZQUFZLGVBQWUsRUFDaEM7Z0JBQ0EsVUFBVSxDQUFDLEdBQUcsRUFBRTtvQkFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztnQkFDbkIsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2FBQ1Q7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7OzZHQXZCVSxnQkFBZ0I7aUdBQWhCLGdCQUFnQiw0RUFuRmpCOzs7O0dBSVQ7MkZBK0VVLGdCQUFnQjtrQkFyRjVCLFNBQVM7K0JBQ0UsWUFBWSxZQUNaOzs7O0dBSVQ7MEhBZ0ZlLElBQUk7c0JBQW5CLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uQ2FuY2VsLCBOYXZpZ2F0aW9uRW5kLCBOYXZpZ2F0aW9uRXJyb3IsIE5hdmlnYXRpb25TdGFydCwgUm91dGVyIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IE1lc3NhZ2VTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vbGliL2NvcmUvbWVzc2FnZS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHotbG9hZGluZycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cInNwaW5uZXJcIiBbaGlkZGVuXT1cImhpZGVcIj5cbiAgICAgIDxkaXY+PC9kaXY+XG4gICAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2BcbiAgICBALXdlYmtpdC1rZXlmcmFtZXMgc3BpbiB7XG4gICAgICAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApXG4gICAgICB9XG4gICAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKVxuICAgICAgfVxuICAgIH1cblxuICAgIEAtbW96LWtleWZyYW1lcyBzcGluIHtcbiAgICAgIDAlIHtcbiAgICAgICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgwKVxuICAgICAgfVxuICAgICAgMTAwJSB7XG4gICAgICAgIC1tb3otdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKVxuICAgICAgfVxuICAgIH1cblxuICAgIEBrZXlmcmFtZXMgc3BpbiB7XG4gICAgICAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDApXG4gICAgICB9XG4gICAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKVxuICAgICAgfVxuICAgIH1cblxuICAgIC5zcGlubmVyIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHotaW5kZXg6IDEwMDM7XG4gICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIC44KTtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW5cbiAgICB9XG5cbiAgICAuc3Bpbm5lciBkaXY6Zmlyc3QtY2hpbGQge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIHdpZHRoOiAxNTBweDtcbiAgICAgIGhlaWdodDogMTUwcHg7XG4gICAgICBtYXJnaW46IC03NXB4IDAgMCAtNzVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDNweCAwIHJnYmEoMjU1LCA1NiwgMTA2LCAxKTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlXG4gICAgfVxuXG4gICAgLnNwaW5uZXIgZGl2OmZpcnN0LWNoaWxkOmFmdGVyLCAuc3Bpbm5lciBkaXY6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlXG4gICAgfVxuXG4gICAgLnNwaW5uZXIgZGl2OmZpcnN0LWNoaWxkOmJlZm9yZSB7XG4gICAgICB0b3A6IDVweDtcbiAgICAgIGxlZnQ6IDVweDtcbiAgICAgIHJpZ2h0OiA1cHg7XG4gICAgICBib3R0b206IDVweDtcbiAgICAgIGJveC1zaGFkb3c6IDAgM3B4IDNweCAwIHJnYigyNTUsIDIyOCwgMzIpO1xuICAgICAgLXdlYmtpdC1hbmltYXRpb246IHNwaW4gM3MgbGluZWFyIGluZmluaXRlO1xuICAgICAgYW5pbWF0aW9uOiBzcGluIDNzIGxpbmVhciBpbmZpbml0ZVxuICAgIH1cblxuICAgIC5zcGlubmVyIGRpdjpmaXJzdC1jaGlsZDphZnRlciB7XG4gICAgICB0b3A6IDE1cHg7XG4gICAgICBsZWZ0OiAxNXB4O1xuICAgICAgcmlnaHQ6IDE1cHg7XG4gICAgICBib3R0b206IDE1cHg7XG4gICAgICBib3gtc2hhZG93OiAwIDNweCAzcHggMCByZ2JhKDYxLCAxNzUsIDI1NSwgMSk7XG4gICAgICBhbmltYXRpb246IHNwaW4gMS41cyBsaW5lYXIgaW5maW5pdGVcbiAgICB9YF1cbn0pXG5leHBvcnQgY2xhc3MgTG9hZGluZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHB1YmxpYyBoaWRlID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IHJvdXRlcjogUm91dGVyLCBwcml2YXRlIG1zZzogTWVzc2FnZVNlcnZpY2UpIHtcbiAgICB0aGlzLm1zZy5sb2FkaW5nU3ViamVjdC5zdWJzY3JpYmUoXG4gICAgICAodjogYm9vbGVhbikgPT4ge1xuICAgICAgICB0aGlzLmhpZGUgPSB2O1xuICAgICAgfVxuICAgICk7XG4gICAgdGhpcy5yb3V0ZXIuZXZlbnRzLnN1YnNjcmliZSgoZXZlbnQpID0+IHtcbiAgICAgIC8vIHNob3cgbG9hZGluZ1xuICAgICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvblN0YXJ0KSB7XG4gICAgICAgIHRoaXMuaGlkZSA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGV2ZW50IGluc3RhbmNlb2YgTmF2aWdhdGlvbkVuZCB8fFxuICAgICAgICBldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25DYW5jZWwgfHxcbiAgICAgICAgZXZlbnQgaW5zdGFuY2VvZiBOYXZpZ2F0aW9uRXJyb3JcbiAgICAgICkge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLmhpZGUgPSB0cnVlO1xuICAgICAgICB9LCAxMDApO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=